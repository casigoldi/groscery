{"version":3,"sources":["redux/teaser/teaser.selector.js","components/teaser/teaser.styles.jsx","components/teaser/teaser.component.jsx","components/teasers/teasers.styles.jsx","components/teasers/teasers.component.jsx","pages/homepage/homepage.component.jsx","redux/category/category.selectors.js","components/category-entry/category-entry.styles.jsx","components/category-entry/category-entry.component.jsx","components/category-entries-filter/category-entries-filter.styles.jsx","components/category-preview/category-preview.styles.jsx","components/category-entries-filter/category-entries-filter.component.jsx","redux/category/category.types.js","redux/category/category.actions.js","components/with-spinner/with-spinner.styles.jsx","components/with-spinner/with-spinner.component.jsx","pages/category/category.component.jsx","components/category-preview/category-preview.component.jsx","components/categories-overview/categories-overview.styles.jsx","components/categories-overview/categories-overview.component.jsx","pages/categories/categories.component.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/footer/footer.styles.jsx","components/footer/footer.component.jsx","App.js","serviceWorker.js","redux/teaser/teaser.reducer.js","redux/category/category.reducers.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["selectTeaserHomepage","createSelector","state","teasers","homepage","TeaserWrapper","styled","div","TeaserBackgroundContainer","imageUrl","TeaserContent","TeaserContentTitle","span","TeaserContentLink","Link","Teaser","props","title","url","to","TeasersContainer","mapStateToProps","createStructuredSelector","connect","map","id","args","key","HomePage","selectCategories","categories","selectCategoriesOverview","Object","keys","selectCategory","categoryId","selectFacets","category","facets","selectCategoryIsLoading","catalog","loaded","CategoryEntryContainer","CategoryEntryImage","img","CategoryEntryContent","CategoryEntryHeadline","CategoryEntryDescription","CategoryEntryType","CategoryEntryLink","a","CategoryEntry","description","type","src","alt","substring","length","className","CategoryFilters","CategoryFilterButton","button","buttonActive","CategoryPreviewContainer","CategoryPreviewHeadline","h2","CategoryEntriesFilter","entries","setVisibility","facet","onClick","handleClick","active","name","entry","ShopActionTypes","REQUEST_CATEGORIES_PENDING","REQUEST_CATEGORIES_SUCCESS","REQUEST_CATEGORIES_FAILED","SET_CATEGORY_FACETS","requestCategoriesIfNeeded","dispatch","getState","CategoryActionTypes","fetch","then","response","json","data","payload","catch","error","isPending","Promise","resolve","LoadingSpinner","WithSpinner","WrappedComponent","isLoading","otherProps","CategoryPageContainer","compose","ownProps","match","params","activeFacets","filter","includes","CategoryPreview","index","CategoriesOverviewContainer","CategoriesPageOverviewContainer","CategoriesPage","this","onRequestCategories","exact","path","component","CategoriesOverview","CategoryPage","Component","HeaderContainer","HeaderNavigation","HeaderNavigationLink","NavLink","Header","as","FooterContainer","Footer","App","Boolean","window","location","hostname","INITIAL_STATE","teaserReducer","action","setCategoryFacets","categoryReducer","assign","rootReducers","combineReducers","middlewares","logger","thunkMiddleware","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.906f8ebc.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectTeasers = (state) => state.teasers;\n\nexport const selectTeaserHomepage = createSelector(\n  [selectTeasers],\n  (teasers) => teasers.homepage\n);\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const TeaserWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1 1 25%;\n  margin: 0 10px 15px;\n  height: 400px;\n  min-width: 300px;\n`;\n\nexport const TeaserBackgroundContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TeaserContent = styled.div`\n  padding: 25px;\n  position: absolute;\n  background-color: #fff;\n  text-align: center;\n`;\n\nexport const TeaserContentTitle = styled.span`\n  font-size: 30px;\n  display: block;\n  padding: 0 15px 15px;\n`;\n\nexport const TeaserContentLink = styled(Link)`\n  display: block;\n  padding: 15px;\n  background-color: #000;\n  text-transform: uppercase;\n  color: #fff;\n`;\n","import React from \"react\";\n\nimport {\n  TeaserWrapper,\n  TeaserBackgroundContainer,\n  TeaserContent,\n  TeaserContentTitle,\n  TeaserContentLink,\n} from \"./teaser.styles\";\n\nconst Teaser = (props) => {\n  const { title, imageUrl, url } = props;\n  return (\n    <TeaserWrapper>\n      <TeaserBackgroundContainer imageUrl={imageUrl}>\n        <TeaserContent>\n          <TeaserContentTitle>{title}</TeaserContentTitle>\n          <TeaserContentLink to={`${url}`}>Show more</TeaserContentLink>\n        </TeaserContent>\n      </TeaserBackgroundContainer>\n    </TeaserWrapper>\n  );\n};\n\nexport default Teaser;\n","import styled from \"styled-components\";\n\nexport const TeasersContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex: 1 1 0;\n  flex-wrap: wrap;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectTeaserHomepage } from \"../../redux/teaser/teaser.selector\";\nimport Teaser from \"../teaser/teaser.component\";\n\nimport { TeasersContainer } from \"./teasers.styles\";\n\nconst Teasers = (props) => {\n  const { teasers } = props;\n\n  return (\n    <TeasersContainer>\n      {teasers.map(({ id, ...args }) => (\n        <Teaser key={id} {...args} />\n      ))}\n    </TeasersContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  teasers: selectTeaserHomepage,\n});\n\nexport default connect(mapStateToProps)(Teasers);\n","import React from \"react\";\nimport Teasers from \"../../components/teasers/teasers.component\";\n\nconst HomePage = () => <Teasers />;\n\nexport default HomePage;\n","import { createSelector } from \"reselect\";\n\nconst selectCatalog = (state) => state.categories;\nconst selectCategories = (state) => state.categories.categories;\n\nexport const selectCategoriesOverview = createSelector(\n  [selectCategories],\n  (categories) =>\n    categories ? Object.keys(categories).map((key) => categories[key]) : []\n);\n\nexport const selectCategory = (categoryId) =>\n  createSelector([selectCategories], (categories) =>\n    categories ? categories[categoryId] : null\n  );\n\nexport const selectFacets = (categoryId) =>\n  createSelector(selectCategory(categoryId), (category) =>\n    category ? category.facets : []\n  );\n\nexport const selectCategoryIsLoading = createSelector(\n  [selectCatalog],\n  (catalog) => {\n    return !catalog.loaded;\n  }\n);\n\nexport const selectVisibleEntries = (categoryId) =>\n  createSelector(\n    [selectCategory(categoryId), selectFacets(categoryId)],\n    (category, facets) => {\n      if (!(category && category.entries)) {\n        return [];\n      }\n      const activeFacets = facets\n        .filter((facet) => facet.active)\n        .map((facet) => facet.id);\n\n      return activeFacets.length === 0\n        ? category.entries\n        : category.entries.filter((entry) => activeFacets.includes(entry.type));\n    }\n  );\n","import styled from \"styled-components\";\n\nexport const CategoryEntryContainer = styled.div`\n  flex: 1 1 50%;\n  min-width: 250px;\n  padding: 10px;\n\n  @media only screen and (min-width: 760px) {\n    flex: 0 1 25%;\n  }\n`;\n\nexport const CategoryEntryImage = styled.img`\n  width: 100%;\n  height: auto;\n  display: block;\n`;\n\nexport const CategoryEntryContent = styled.div`\n  background-color: #fff;\n  position: relative;\n  padding: 15px;\n`;\n\nexport const CategoryEntryHeadline = styled.span`\n  font-size: 24px;\n  padding-bottom: 10px;\n  display: block;\n`;\n\nexport const CategoryEntryDescription = styled.span`\n  display: block;\n`;\n\nexport const CategoryEntryType = styled.span`\n  position: absolute;\n  top: 15px;\n  right: 10px;\n  color: white;\n  font-size: 11px;\n  border-radius: 3px;\n  padding: 5px;\n\n  background-color: grey;\n\n  &.meat {\n    background-color: red;\n  }\n\n  &.fish {\n    background-color: blue;\n  }\n\n  &.fruits {\n    background-color: green;\n  }\n\n  &.alcohol {\n    background-color: black;\n  }\n\n  &.convience {\n    background-color: orange;\n  }\n`;\n\nexport const CategoryEntryLink = styled.a`\n  display: block;\n  padding-top: 30px;\n  font-size: 12px;\n`;\n","import React from \"react\";\n\nimport {\n  CategoryEntryContainer,\n  CategoryEntryImage,\n  CategoryEntryContent,\n  CategoryEntryHeadline,\n  CategoryEntryDescription,\n  CategoryEntryType,\n  CategoryEntryLink,\n} from \"./category-entry.styles\";\n\nconst CategoryEntry = (props) => {\n  const { title, description, type, imageUrl } = props;\n\n  return (\n    <CategoryEntryContainer>\n      <CategoryEntryImage src={imageUrl} alt={title}></CategoryEntryImage>\n      <CategoryEntryContent>\n        <CategoryEntryHeadline>{title}</CategoryEntryHeadline>\n        <CategoryEntryDescription>\n          {description.substring(0, 40)} {description.length > 40 ? \"…\" : \"\"}\n        </CategoryEntryDescription>\n        <CategoryEntryType className={type}>{type}</CategoryEntryType>\n        <CategoryEntryLink>> More info (coming soon)</CategoryEntryLink>\n      </CategoryEntryContent>\n    </CategoryEntryContainer>\n  );\n};\n\nexport default CategoryEntry;\n","import styled from \"styled-components\";\n\nexport const CategoryFilters = styled.div`\n  background-color: #ccc;\n  padding: 15px 15px 0;\n`;\n\nexport const CategoryFilterButton = styled.button`\n  padding: 5px 7px;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  color: #fff;\n  border-radius: 3px;\n  background-color: grey;\n  border: 0;\n  outline: 0;\n  opacity: ${(props) => (props.buttonActive ? \"1\" : \"0.5\")};\n\n  &.meat {\n    background-color: red;\n  }\n\n  &.fish {\n    background-color: blue;\n  }\n\n  &.fruits {\n    background-color: green;\n  }\n\n  &.alcohol {\n    background-color: black;\n  }\n\n  &.convience {\n    background-color: orange;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const CategoryPreviewContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  background-color: #ccc;\n  padding: 15px 5px;\n  margin-bottom: 60px;\n`;\n\nexport const CategoryPreviewHeadline = styled.h2`\n  font-size: 10vw;\n  text-transform: uppercase;\n  margin-bottom: 0;\n  line-height: 0.7em;\n  color: #ccc;\n  margin-top: 30px;\n\n  a {\n    color: #ccc;\n    text-decoration: none;\n  }\n`;\n","import React from \"react\";\nimport CategoryEntry from \"../category-entry/category-entry.component\";\n\nimport {\n  CategoryFilters,\n  CategoryFilterButton,\n} from \"./category-entries-filter.styles\";\nimport {\n  CategoryPreviewHeadline,\n  CategoryPreviewContainer,\n} from \"../category-preview/category-preview.styles\";\n\nconst CategoryEntriesFilter = ({\n  category,\n  entries,\n  facets,\n  setVisibility,\n}) => {\n  const handleClick = (facet) => {\n    setVisibility(facet, category.id);\n  };\n\n  return (\n    <div>\n      <CategoryPreviewHeadline>{category.title}</CategoryPreviewHeadline>\n      <CategoryFilters>\n        {facets.map((facet) => (\n          <CategoryFilterButton\n            className={`${facet.id}`}\n            onClick={() => handleClick(facet)}\n            buttonActive={facet.active}\n            key={facet.id}\n          >\n            {facet.name}\n          </CategoryFilterButton>\n        ))}\n      </CategoryFilters>\n      <CategoryPreviewContainer>\n        {entries.length > 0 ? (\n          entries.map(({ id, ...entry }) => (\n            <CategoryEntry key={id} {...entry} />\n          ))\n        ) : (\n          <p>No items available</p>\n        )}\n      </CategoryPreviewContainer>\n    </div>\n  );\n};\n\nexport default CategoryEntriesFilter;\n","const ShopActionTypes = {\n  REQUEST_CATEGORIES_PENDING: \"REQUEST_CATEGORIES_PENDING\",\n  REQUEST_CATEGORIES_SUCCESS: \"REQUEST_CATEGORIES_SUCCESS\",\n  REQUEST_CATEGORIES_FAILED: \"REQUEST_CATEGORIES_FAILED\",\n  SET_CATEGORY_FACETS: \"SET_CATEGORY_FACETS\",\n};\n\nexport default ShopActionTypes;\n","import CategoryActionTypes from \"./category.types\";\n\nexport const setVisibilityFilter = (facet, categoryId) => ({\n  type: CategoryActionTypes.SET_CATEGORY_FACETS,\n  facet,\n  categoryId,\n});\n\nconst requestCategories = () => (dispatch) => {\n  dispatch({\n    type: CategoryActionTypes.REQUEST_CATEGORIES_PENDING,\n  });\n  fetch(`https://my-json-server.typicode.com/casigoldi/foodapi/categories`)\n    .then((response) => response.json())\n    .then((data) =>\n      dispatch({\n        type: CategoryActionTypes.REQUEST_CATEGORIES_SUCCESS,\n        payload: data,\n      })\n    )\n    .catch((error) =>\n      dispatch({\n        type: CategoryActionTypes.REQUEST_CATEGORIES_FAILED,\n        payload: error,\n      })\n    );\n};\n\nexport const requestCategoriesIfNeeded = () => (dispatch, getState) => {\n  const categories = getState().categories.categories;\n  if (categories.length === 0) {\n    return dispatch(requestCategories());\n  } else if (categories.isPending) {\n    return Promise.resolve();\n  }\n};\n","import styled from \"styled-components\";\n\nexport const LoadingSpinner = styled.span`\n  display: block;\n  text-align: center;\n  padding: 60px;\n`;\n","import React from \"react\";\n\nimport { LoadingSpinner } from \"./with-spinner.styles\";\n\nconst WithSpinner = (WrappedComponent) => ({ isLoading, ...otherProps }) => {\n  return isLoading ? (\n    <LoadingSpinner>Loading…</LoadingSpinner>\n  ) : (\n    <WrappedComponent {...otherProps} />\n  );\n};\n\nexport default WithSpinner;\n","import { connect } from \"react-redux\";\nimport {\n  selectCategory,\n  selectVisibleEntries,\n  selectFacets,\n  selectCategoryIsLoading,\n} from \"../../redux/category/category.selectors\";\n\nimport CategoryEntriesFilter from \"../../components/category-entries-filter/category-entries-filter.component\";\nimport { setVisibilityFilter } from \"../../redux/category/category.actions\";\nimport { compose } from \"redux\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  isLoading: selectCategoryIsLoading(state),\n  category: selectCategory(ownProps.match.params.categoryId)(state),\n  entries: selectVisibleEntries(ownProps.match.params.categoryId)(state),\n  facets: selectFacets(ownProps.match.params.categoryId)(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setVisibility: (filter, id) => dispatch(setVisibilityFilter(filter, id)),\n});\n\nconst CategoryPageContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  WithSpinner\n)(CategoryEntriesFilter);\n\nexport default CategoryPageContainer;\n","import React from \"react\";\nimport CategoryEntry from \"../category-entry/category-entry.component\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  CategoryPreviewHeadline,\n  CategoryPreviewContainer,\n} from \"./category-preview.styles\";\n\nconst CategoryPreview = (props) => {\n  const { title, url, entries } = props;\n\n  return (\n    <>\n      <CategoryPreviewHeadline>\n        <Link to={`${url}`}>{title}</Link>\n      </CategoryPreviewHeadline>\n      <CategoryPreviewContainer>\n        {entries\n          .filter((entry, index) => index < 4)\n          .map(({ id, ...entry }) => (\n            <CategoryEntry key={id} {...entry} />\n          ))}\n      </CategoryPreviewContainer>\n    </>\n  );\n};\n\nexport default CategoryPreview;\n","import styled from \"styled-components\";\n\nexport const CategoriesOverviewContainer = styled.div`\n  width: auto;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  selectCategoriesOverview,\n  selectCategoryIsLoading,\n} from \"../../redux/category/category.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport CategoryPreview from \"../category-preview/category-preview.component\";\n\nimport { CategoriesOverviewContainer } from \"./categories-overview.styles\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport { compose } from \"redux\";\n\nconst CategoriesOverview = (props) => {\n  const { categories } = props;\n\n  return (\n    <CategoriesOverviewContainer>\n      {categories.map(({ id, ...category }) => (\n        <CategoryPreview key={id} {...category} />\n      ))}\n    </CategoriesOverviewContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectCategoryIsLoading,\n  categories: selectCategoriesOverview,\n});\n\nconst CategoriesPageOverviewContainer = compose(\n  connect(mapStateToProps, null),\n  WithSpinner\n)(CategoriesOverview);\n\nexport default CategoriesPageOverviewContainer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\n\nimport CategoryPage from \"../category/category.component\";\nimport CategoriesOverview from \"../../components/categories-overview/categories-overview.component\";\nimport { requestCategoriesIfNeeded } from \"../../redux/category/category.actions\";\n\nclass CategoriesPage extends Component {\n  componentDidMount() {\n    this.props.onRequestCategories();\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div>\n        <Route exact path={`${match.path}`} component={CategoriesOverview} />\n        <Route path={`${match.path}/:categoryId`} component={CategoryPage} />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onRequestCategories: () => dispatch(requestCategoriesIfNeeded()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CategoriesPage);\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const HeaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const HeaderNavigation = styled.div`\n  display: flex;\n  text-align: right;\n`;\n\nexport const HeaderNavigationLink = styled(NavLink)`\n  display: none;\n  padding: 15px;\n\n  &.visibleMobile {\n    display: block;\n  }\n\n  &.active {\n    color: red;\n  }\n\n  @media only screen and (min-width: 500px) {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  HeaderContainer,\n  HeaderNavigation,\n  HeaderNavigationLink,\n} from \"./header.styles\";\n\nconst Header = () => (\n  <HeaderContainer>\n    <HeaderNavigationLink as={Link} to=\"/\" className=\"visibleMobile\">\n      <span>Gloscery</span>\n    </HeaderNavigationLink>\n    <HeaderNavigation>\n      <HeaderNavigationLink exact to=\"/categories/fresh\">\n        Fresh\n      </HeaderNavigationLink>\n      <HeaderNavigationLink exact to=\"/categories/frozen\">\n        Frozen\n      </HeaderNavigationLink>\n      <HeaderNavigationLink exact to=\"/categories/drinks\">\n        Drinks\n      </HeaderNavigationLink>\n      <HeaderNavigationLink exact to=\"/categories/\" className=\"visibleMobile\">\n        All categories\n      </HeaderNavigationLink>\n    </HeaderNavigation>\n  </HeaderContainer>\n);\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const FooterContainer = styled.div`\n  text-align: center;\n  margin-top: 15px;\n  padding: 15px;\n  font-size: 11px;\n`;\n","import React from \"react\";\n\nimport { FooterContainer } from \"./footer.styles\";\n\nconst Footer = () => (\n  <FooterContainer>\n    <span>Some Copyrights and stuff</span>\n  </FooterContainer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport CategoriesPage from \"./pages/categories/categories.component\";\nimport Header from \"./components/header/header.component\";\nimport Footer from \"./components/footer/footer.component\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/categories\" component={CategoriesPage} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const INITIAL_STATE = {\n  homepage: [\n    {\n      id: 1,\n      title: \"Healthy & fresh!\",\n      imageUrl: \"https://source.unsplash.com/600x400/?healthy\",\n      url: \"/categories/fresh\",\n    },\n    {\n      id: 2,\n      title: \"Iced & cloudy!\",\n      imageUrl: \"https://source.unsplash.com/600x400/?cream\",\n      url: \"/categories/frozen\",\n    },\n    {\n      id: 3,\n      title: \"Stay hydrated!\",\n      imageUrl: \"https://source.unsplash.com/600x400/?drinks\",\n      url: \"/categories/drinks\",\n    },\n    {\n      id: 4,\n      title: \"Simply everything!\",\n      imageUrl: \"https://source.unsplash.com/600x400/?groceries\",\n      url: \"/categories/\",\n    },\n  ],\n};\n\nconst teaserReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default teaserReducer;\n","import CategoryActionTypes from \"./category.types\";\n\nconst INITIAL_STATE = {\n  categories: [],\n  loaded: false,\n  isPending: false,\n};\n\nconst setCategoryFacets = (state, action) => {\n  const category = state.categories[action.categoryId];\n  const facets = category.facets.map((facet) =>\n    facet.id === action.facet.id ? { ...facet, active: !facet.active } : facet\n  );\n  return {\n    ...state,\n    categories: {\n      ...state.categories,\n      [action.categoryId]: {\n        ...category,\n        facets: [...facets],\n      },\n    },\n  };\n};\n\nconst categoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CategoryActionTypes.REQUEST_CATEGORIES_PENDING:\n      return Object.assign({}, state, { isPending: true, loaded: false });\n    case CategoryActionTypes.REQUEST_CATEGORIES_SUCCESS:\n      return Object.assign({}, state, {\n        categories: action.payload,\n        loaded: true,\n        isPending: false,\n      });\n    case CategoryActionTypes.REQUEST_CATEGORIES_FAILED:\n      return CategoryActionTypes.assign({}, state, {\n        categories: action.payload,\n        loaded: true,\n        isPending: false,\n      });\n    case CategoryActionTypes.SET_CATEGORY_FACETS:\n      return setCategoryFacets(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducer;\n","import teaserReducer from \"./teaser/teaser.reducer\";\nimport { combineReducers } from \"redux\";\nimport categoryReducer from \"./category/category.reducers\";\n\nconst rootReducers = combineReducers({\n  teasers: teaserReducer,\n  categories: categoryReducer,\n});\n\nexport default rootReducers;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { logger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducers from \"./root-reducer\";\n\nconst middlewares = [logger, thunkMiddleware];\nconst store = createStore(rootReducers, applyMiddleware(...middlewares));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}