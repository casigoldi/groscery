{"version":3,"sources":["redux/teaser/teaser.selector.js","components/teaser/teaser.styles.jsx","components/teaser/teaser.component.jsx","components/teasers/teasers.styles.jsx","components/teasers/teasers.component.jsx","pages/homepage/homepage.component.jsx","redux/category/category.selectors.js","components/category-entry/category-entry.styles.jsx","components/category-entry/category-entry.component.jsx","components/category-entries-filter/category-entries-filter.styles.jsx","components/category-preview/category-preview.styles.jsx","components/category-entries-filter/category-entries-filter.component.jsx","pages/category/category.component.jsx","redux/category/category.actions.js","components/category-preview/category-preview.component.jsx","components/categories-overview/categories-overview.styles.jsx","components/categories-overview/categories-overview.component.jsx","pages/categories/categories.component.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/footer/footer.styles.jsx","components/footer/footer.component.jsx","App.js","serviceWorker.js","redux/teaser/teaser.reducer.js","redux/category/category.reducers.js","redux/root-reducer.js","redux/store.js","index.js"],"names":["selectTeaserHomepage","createSelector","state","teasers","homepage","TeaserWrapper","styled","div","TeaserBackgroundContainer","imageUrl","TeaserContent","TeaserContentTitle","span","TeaserContentLink","Link","Teaser","props","title","url","to","TeasersContainer","mapStateToProps","createStructuredSelector","connect","map","id","args","key","HomePage","selectCategories","categories","selectCategoriesOverview","Object","keys","selectCategory","categoryId","selectFacets","category","facets","CategoryEntryContainer","CategoryEntryImage","img","CategoryEntryContent","CategoryEntryHeadline","CategoryEntryDescription","CategoryEntryType","CategoryEntryLink","a","CategoryEntry","description","type","src","alt","substring","length","className","CategoryFilters","CategoryFilterButton","button","buttonActive","CategoryPreviewContainer","CategoryPreviewHeadline","h2","CategoryEntriesFilter","entries","setVisibility","facet","onClick","handleClick","active","name","entry","ownProps","match","params","activeFacets","filter","includes","dispatch","CategoryPreview","index","CategoriesOverviewContainer","CategoriesPage","this","exact","path","component","CategoriesOverview","CategoryPage","Component","HeaderContainer","HeaderNavigation","HeaderNavigationLink","NavLink","Header","as","FooterContainer","Footer","App","Boolean","window","location","hostname","INITIAL_STATE","teaserReducer","action","fresh","frozen","drinks","setVisibilityFilter","categoryReducer","console","log","rootReducers","combineReducers","middlewares","logger","thunkMiddleware","store","createStore","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9af869c3.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectTeasers = (state) => state.teasers;\n\nexport const selectTeaserHomepage = createSelector(\n  [selectTeasers],\n  (teasers) => teasers.homepage\n);\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const TeaserWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1 1 25%;\n  margin: 0 10px 15px;\n  height: 400px;\n  min-width: 300px;\n`;\n\nexport const TeaserBackgroundContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  background-image: ${({ imageUrl }) => `url(${imageUrl})`};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const TeaserContent = styled.div`\n  padding: 25px;\n  position: absolute;\n  background-color: #fff;\n  text-align: center;\n`;\n\nexport const TeaserContentTitle = styled.span`\n  font-size: 30px;\n  display: block;\n  padding: 0 15px 15px;\n`;\n\nexport const TeaserContentLink = styled(Link)`\n  display: block;\n  padding: 15px;\n  background-color: #000;\n  text-transform: uppercase;\n  color: #fff;\n`;\n","import React from \"react\";\n\nimport {\n  TeaserWrapper,\n  TeaserBackgroundContainer,\n  TeaserContent,\n  TeaserContentTitle,\n  TeaserContentLink,\n} from \"./teaser.styles\";\n\nconst Teaser = (props) => {\n  const { title, imageUrl, url } = props;\n  return (\n    <TeaserWrapper>\n      <TeaserBackgroundContainer imageUrl={imageUrl}>\n        <TeaserContent>\n          <TeaserContentTitle>{title}</TeaserContentTitle>\n          <TeaserContentLink to={`${url}`}>Show more</TeaserContentLink>\n        </TeaserContent>\n      </TeaserBackgroundContainer>\n    </TeaserWrapper>\n  );\n};\n\nexport default Teaser;\n","import styled from \"styled-components\";\n\nexport const TeasersContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex: 1 1 0;\n  flex-wrap: wrap;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectTeaserHomepage } from \"../../redux/teaser/teaser.selector\";\nimport Teaser from \"../teaser/teaser.component\";\n\nimport { TeasersContainer } from \"./teasers.styles\";\n\nconst Teasers = (props) => {\n  const { teasers } = props;\n\n  return (\n    <TeasersContainer>\n      {teasers.map(({ id, ...args }) => (\n        <Teaser key={id} {...args} />\n      ))}\n    </TeasersContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  teasers: selectTeaserHomepage,\n});\n\nexport default connect(mapStateToProps)(Teasers);\n","import React from \"react\";\nimport Teasers from \"../../components/teasers/teasers.component\";\n\nconst HomePage = () => <Teasers />;\n\nexport default HomePage;\n","import { createSelector } from \"reselect\";\n\nconst selectCategories = (state) => state.categories;\n\nexport const selectCategoriesOverview = createSelector(\n  [selectCategories],\n  (categories) =>\n    categories ? Object.keys(categories).map((key) => categories[key]) : []\n);\n\nexport const selectCategory = (categoryId) =>\n  createSelector([selectCategories], (categories) =>\n    categories ? categories[categoryId] : null\n  );\n\nexport const selectFacets = (categoryId) =>\n  createSelector(selectCategory(categoryId), (category) => category.facets);\n\nexport const selectVisibleEntries = (categoryId) =>\n  createSelector(\n    [selectCategory(categoryId), selectFacets(categoryId)],\n    (category, facets) => {\n      const activeFacets = facets\n        .filter((facet) => facet.active)\n        .map((facet) => facet.id);\n\n      return activeFacets.length === 0\n        ? category.entries\n        : category.entries.filter((entry) => activeFacets.includes(entry.type));\n    }\n  );\n","import styled from \"styled-components\";\n\nexport const CategoryEntryContainer = styled.div`\n  flex: 1 1 50%;\n  min-width: 250px;\n  padding: 10px;\n\n  @media only screen and (min-width: 760px) {\n    flex: 0 1 25%;\n  }\n`;\n\nexport const CategoryEntryImage = styled.img`\n  width: 100%;\n  height: auto;\n  display: block;\n`;\n\nexport const CategoryEntryContent = styled.div`\n  background-color: #fff;\n  position: relative;\n  padding: 15px;\n`;\n\nexport const CategoryEntryHeadline = styled.span`\n  font-size: 24px;\n  padding-bottom: 10px;\n  display: block;\n`;\n\nexport const CategoryEntryDescription = styled.span`\n  display: block;\n`;\n\nexport const CategoryEntryType = styled.span`\n  position: absolute;\n  top: 15px;\n  right: 10px;\n  color: white;\n  font-size: 11px;\n  border-radius: 3px;\n  padding: 5px;\n\n  background-color: grey;\n\n  &.meat {\n    background-color: red;\n  }\n\n  &.fish {\n    background-color: blue;\n  }\n\n  &.fruits {\n    background-color: green;\n  }\n\n  &.alcohol {\n    background-color: black;\n  }\n\n  &.convience {\n    background-color: orange;\n  }\n`;\n\nexport const CategoryEntryLink = styled.a`\n  display: block;\n  padding-top: 30px;\n  font-size: 12px;\n`;\n","import React from \"react\";\n\nimport {\n  CategoryEntryContainer,\n  CategoryEntryImage,\n  CategoryEntryContent,\n  CategoryEntryHeadline,\n  CategoryEntryDescription,\n  CategoryEntryType,\n  CategoryEntryLink,\n} from \"./category-entry.styles\";\n\nconst CategoryEntry = (props) => {\n  const { title, description, type, imageUrl } = props;\n\n  return (\n    <CategoryEntryContainer>\n      <CategoryEntryImage src={imageUrl} alt={title}></CategoryEntryImage>\n      <CategoryEntryContent>\n        <CategoryEntryHeadline>{title}</CategoryEntryHeadline>\n        <CategoryEntryDescription>\n          {description.substring(0, 40)} {description.length > 40 ? \"…\" : \"\"}\n        </CategoryEntryDescription>\n        <CategoryEntryType className={type}>{type}</CategoryEntryType>\n        <CategoryEntryLink>> More info (coming soon)</CategoryEntryLink>\n      </CategoryEntryContent>\n    </CategoryEntryContainer>\n  );\n};\n\nexport default CategoryEntry;\n","import styled from \"styled-components\";\n\nexport const CategoryFilters = styled.div`\n  background-color: #ccc;\n  padding: 15px 15px 0;\n`;\n\nexport const CategoryFilterButton = styled.button`\n  padding: 5px 7px;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  color: #fff;\n  border-radius: 3px;\n  background-color: grey;\n  border: 0;\n  outline: 0;\n  opacity: ${(props) => (props.buttonActive ? \"1\" : \"0.5\")};\n\n  &.meat {\n    background-color: red;\n  }\n\n  &.fish {\n    background-color: blue;\n  }\n\n  &.fruits {\n    background-color: green;\n  }\n\n  &.alcohol {\n    background-color: black;\n  }\n\n  &.convience {\n    background-color: orange;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const CategoryPreviewContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  background-color: #ccc;\n  padding: 15px 5px;\n  margin-bottom: 60px;\n`;\n\nexport const CategoryPreviewHeadline = styled.h2`\n  font-size: 10vw;\n  text-transform: uppercase;\n  margin-bottom: 0;\n  line-height: 0.7em;\n  color: #ccc;\n  margin-top: 30px;\n\n  a {\n    color: #ccc;\n    text-decoration: none;\n  }\n`;\n","import React from \"react\";\nimport CategoryEntry from \"../category-entry/category-entry.component\";\n\nimport {\n  CategoryFilters,\n  CategoryFilterButton,\n} from \"./category-entries-filter.styles\";\nimport {\n  CategoryPreviewHeadline,\n  CategoryPreviewContainer,\n} from \"../category-preview/category-preview.styles\";\n\nconst CategoryEntriesFilter = ({\n  category,\n  entries,\n  facets,\n  setVisibility,\n}) => {\n  const handleClick = (facet) => {\n    setVisibility(facet, category.id);\n  };\n\n  return (\n    <div>\n      <CategoryPreviewHeadline>{category.title}</CategoryPreviewHeadline>\n      <CategoryFilters>\n        {facets.map((facet) => (\n          <CategoryFilterButton\n            className={`${facet.id}`}\n            onClick={() => handleClick(facet)}\n            buttonActive={facet.active}\n            key={facet.id}\n          >\n            {facet.name}\n          </CategoryFilterButton>\n        ))}\n      </CategoryFilters>\n      <CategoryPreviewContainer>\n        {entries.length > 0 ? (\n          entries.map(({ id, ...entry }) => (\n            <CategoryEntry key={id} {...entry} />\n          ))\n        ) : (\n          <p>No items available</p>\n        )}\n      </CategoryPreviewContainer>\n    </div>\n  );\n};\n\nexport default CategoryEntriesFilter;\n","import { connect } from \"react-redux\";\nimport {\n  selectCategory,\n  selectVisibleEntries,\n  selectFacets,\n} from \"../../redux/category/category.selectors\";\n\nimport CategoryEntriesFilter from \"../../components/category-entries-filter/category-entries-filter.component\";\nimport { setVisibilityFilter } from \"../../redux/category/category.actions\";\n\nconst mapStateToProps = (state, ownProps) => ({\n  category: selectCategory(ownProps.match.params.categoryId)(state),\n  entries: selectVisibleEntries(ownProps.match.params.categoryId)(state),\n  facets: selectFacets(ownProps.match.params.categoryId)(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setVisibility: (filter, id) => dispatch(setVisibilityFilter(filter, id)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CategoryEntriesFilter);\n","export const setVisibilityFilter = (facet, categoryId) => ({\n  type: \"SET_VISIBILITY_FILTER\",\n  facet,\n  categoryId,\n});\n","import React from \"react\";\nimport CategoryEntry from \"../category-entry/category-entry.component\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  CategoryPreviewHeadline,\n  CategoryPreviewContainer,\n} from \"./category-preview.styles\";\n\nconst CategoryPreview = (props) => {\n  const { title, url, entries } = props;\n\n  return (\n    <>\n      <CategoryPreviewHeadline>\n        <Link to={`${url}`}>{title}</Link>\n      </CategoryPreviewHeadline>\n      <CategoryPreviewContainer>\n        {entries\n          .filter((entry, index) => index < 4)\n          .map(({ id, ...entry }) => (\n            <CategoryEntry key={id} {...entry} />\n          ))}\n      </CategoryPreviewContainer>\n    </>\n  );\n};\n\nexport default CategoryPreview;\n","import styled from \"styled-components\";\n\nexport const CategoriesOverviewContainer = styled.div`\n  width: auto;\n`;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { selectCategoriesOverview } from \"../../redux/category/category.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport CategoryPreview from \"../category-preview/category-preview.component\";\n\nimport { CategoriesOverviewContainer } from \"./categories-overview.styles\";\n\nconst CategoriesOverview = (props) => {\n  const { categories } = props;\n\n  return (\n    <CategoriesOverviewContainer>\n      {categories.map(({ id, ...category }) => (\n        <CategoryPreview key={id} {...category} />\n      ))}\n    </CategoriesOverviewContainer>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  categories: selectCategoriesOverview,\n});\n\nexport default connect(mapStateToProps)(CategoriesOverview);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Route } from \"react-router-dom\";\n\nimport CategoryPage from \"../category/category.component\";\nimport CategoriesOverview from \"../../components/categories-overview/categories-overview.component\";\n\nclass CategoriesPage extends Component {\n  render() {\n    const { match } = this.props;\n    return (\n      <div>\n        <Route exact path={`${match.path}`} component={CategoriesOverview} />\n        <Route path={`${match.path}/:categoryId`} component={CategoryPage} />\n      </div>\n    );\n  }\n}\nexport default connect(null, null)(CategoriesPage);\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const HeaderContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const HeaderNavigation = styled.div`\n  display: flex;\n  text-align: right;\n`;\n\nexport const HeaderNavigationLink = styled(NavLink)`\n  display: none;\n  padding: 15px;\n\n  &.visibleMobile {\n    display: block;\n  }\n\n  &.active {\n    color: red;\n  }\n\n  @media only screen and (min-width: 500px) {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport {\n  HeaderContainer,\n  HeaderNavigation,\n  HeaderNavigationLink,\n} from \"./header.styles\";\n\nconst Header = () => (\n  <HeaderContainer>\n    <HeaderNavigationLink as={Link} to=\"/\" className=\"visibleMobile\">\n      <span>Gloscery</span>\n    </HeaderNavigationLink>\n    <HeaderNavigation>\n      <HeaderNavigationLink exact to=\"/categories/fresh\">\n        Fresh\n      </HeaderNavigationLink>\n      <HeaderNavigationLink exact to=\"/categories/frozen\">\n        Frozen\n      </HeaderNavigationLink>\n      <HeaderNavigationLink exact to=\"/categories/drinks\">\n        Drinks\n      </HeaderNavigationLink>\n      <HeaderNavigationLink exact to=\"/categories/\" className=\"visibleMobile\">\n        All categories\n      </HeaderNavigationLink>\n    </HeaderNavigation>\n  </HeaderContainer>\n);\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const FooterContainer = styled.div`\n  text-align: center;\n  margin-top: 15px;\n  padding: 15px;\n  font-size: 11px;\n`;\n","import React from \"react\";\n\nimport { FooterContainer } from \"./footer.styles\";\n\nconst Footer = () => (\n  <FooterContainer>\n    <span>Some Copyrights and stuff</span>\n  </FooterContainer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport CategoriesPage from \"./pages/categories/categories.component\";\nimport Header from \"./components/header/header.component\";\nimport Footer from \"./components/footer/footer.component\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/categories\" component={CategoriesPage} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const INITIAL_STATE = {\n  homepage: [\n    {\n      id: 1,\n      title: \"Healthy & fresh!\",\n      imageUrl: \"https://source.unsplash.com/600x400/?healthy\",\n      url: \"/categories/fresh\",\n    },\n    {\n      id: 2,\n      title: \"Iced & cloudy!\",\n      imageUrl: \"https://source.unsplash.com/600x400/?cream\",\n      url: \"/categories/frozen\",\n    },\n    {\n      id: 3,\n      title: \"Stay hydrated!\",\n      imageUrl: \"https://source.unsplash.com/600x400/?drinks\",\n      url: \"/categories/drinks\",\n    },\n    {\n      id: 4,\n      title: \"Simply everything!\",\n      imageUrl: \"https://source.unsplash.com/600x400/?groceries\",\n      url: \"/categories/\",\n    },\n  ],\n};\n\nconst teaserReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default teaserReducer;\n","const INITIAL_STATE = {\n  fresh: {\n    id: \"fresh\",\n    title: \"Fresh\",\n    url: \"/categories/fresh\",\n    facets: [\n      { id: \"fruits\", name: \"Fruits\", active: false },\n      { id: \"meat\", name: \"Meat\", active: false },\n    ],\n    entries: [\n      {\n        id: 1,\n        title: \"Bunana\",\n        description:\n          \"Banana description Banana descriptionBanana descriptionBanana descriptionBanana description\",\n        type: \"fruits\",\n        imageUrl: \"https://source.unsplash.com/300x200/?banana\",\n      },\n      {\n        id: 2,\n        title: \"Appapapa\",\n        description:\n          \"Appapapa description ppapapa descriptionppapapa descriptionppapapa descripti\",\n        type: \"fruits\",\n        imageUrl: \"https://source.unsplash.com/300x200/?apple\",\n      },\n      {\n        id: 3,\n        title: \"Chicken\",\n        description:\n          \"Chicken description Chicken descriptionChicken descriptionChicken descriptionChicken description\",\n        type: \"meat\",\n        imageUrl: \"https://source.unsplash.com/300x200/?chicken\",\n      },\n      {\n        id: 4,\n        title: \"Beef\",\n        description:\n          \"Beef description Beef descriptionBeef descriptionBeef descriptionBeef descriptionBeef description\",\n        type: \"meat\",\n        imageUrl: \"https://source.unsplash.com/300x200/?steak\",\n      },\n      {\n        id: 5,\n        title: \"Peaches\",\n        description:\n          \"Banana peaches Banana peaches peaches peachesdas ada sdasd description\",\n        type: \"fruits\",\n        imageUrl: \"https://source.unsplash.com/300x200/?peaches\",\n      },\n      {\n        id: 6,\n        title: \"Plums\",\n        description: \"Plumpa plumbi plumba descriotion some stuff\",\n        type: \"fruits\",\n        imageUrl: \"https://source.unsplash.com/300x200/?plums\",\n      },\n      {\n        id: 7,\n        title: \"Pineapple\",\n        description:\n          \"Chicken description Chicken descriptionChicken descriptionChicken descriptionChicken description\",\n        type: \"meat\",\n        imageUrl: \"https://source.unsplash.com/300x200/?pineapple\",\n      },\n      {\n        id: 8,\n        title: \"Coconut\",\n        description:\n          \"Coconut description Coconut Coconut descriptionBeef descriptionBeef descriptionBeef description\",\n        type: \"meat\",\n        imageUrl: \"https://source.unsplash.com/300x200/?coconut\",\n      },\n    ],\n  },\n  frozen: {\n    id: \"frozen\",\n    title: \"Frozen\",\n    url: \"/categories/frozen\",\n    facets: [\n      { id: \"convience\", name: \"Convience\", active: false },\n      { id: \"fish\", name: \"Fish\", active: false },\n    ],\n    entries: [\n      {\n        id: 1,\n        title: \"Pizza\",\n        description:\n          \"Who wants pizza Who wants pizza Who wants pizza Who wants pizza Who wants pizza\",\n        type: \"convience\",\n        imageUrl: \"https://source.unsplash.com/300x200/?pizza\",\n      },\n      {\n        id: 2,\n        title: \"Gambas\",\n        description:\n          \"Gabbambas description Gabbambas description Gabbambas description\",\n        type: \"fish\",\n        imageUrl: \"https://source.unsplash.com/300x200/?shrimps\",\n      },\n      {\n        id: 3,\n        title: \"Ice Cream\",\n        description:\n          \"I scream for icecream I scream for icecream I scream for icecream I scream for icecream\",\n        type: \"convience\",\n        imageUrl: \"https://source.unsplash.com/300x200/?icecream\",\n      },\n      {\n        id: 4,\n        title: \"Ice cubes\",\n        description:\n          \"You are as cold as ice You are as cold as ice You are as cold as ice\",\n        type: \"fish\",\n        imageUrl: \"https://source.unsplash.com/300x200/?icecubes\",\n      },\n    ],\n  },\n  drinks: {\n    id: \"drinks\",\n    title: \"Drinks\",\n    url: \"/categories/drinks\",\n    facets: [\n      { id: \"soft\", name: \"Softdrink\", active: false },\n      { id: \"alcohol\", name: \"Alcohol\", active: false },\n    ],\n    entries: [\n      {\n        id: 1,\n        title: \"Coke\",\n        description:\n          \"Who wants Coke Who wants Coke Who wants Coke Who wants Coke Who wants Coke\",\n        type: \"soft\",\n        imageUrl: \"https://source.unsplash.com/300x200/?coke\",\n      },\n      {\n        id: 2,\n        title: \"Whiskey\",\n        description: \"Whiskey Whiskey Whiskey Whiskey Whiskey description\",\n        type: \"alcohol\",\n        imageUrl: \"https://source.unsplash.com/300x200/?whiskey\",\n      },\n      {\n        id: 3,\n        title: \"Scotch\",\n        description:\n          \"I scream for icecream I scream for icecream I scream for icecream I scream for icecream\",\n        type: \"alcohol\",\n        imageUrl: \"https://source.unsplash.com/300x200/?scotch\",\n      },\n      {\n        id: 4,\n        title: \"Beer\",\n        description: \"To beer or not to beer! Beer beer! I root for Beer!\",\n        type: \"alcohol\",\n        imageUrl: \"https://source.unsplash.com/300x200/?beer\",\n      },\n    ],\n  },\n};\n\nconst setVisibilityFilter = (state, action) => {\n  const category = state[action.categoryId];\n  const facets = category.facets.map((facet) =>\n    facet.id === action.facet.id ? { ...facet, active: !facet.active } : facet\n  );\n  return {\n    ...state,\n    [action.categoryId]: {\n      ...category,\n      facets: [...facets],\n    },\n  };\n};\n\nconst categoryReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case \"SET_VISIBILITY_FILTER\":\n      console.log(\"VISIBILITY FILTER\");\n      return setVisibilityFilter(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default categoryReducer;\n","import teaserReducer from \"./teaser/teaser.reducer\";\nimport { combineReducers } from \"redux\";\nimport categoryReducer from \"./category/category.reducers\";\n\nconst rootReducers = combineReducers({\n  teasers: teaserReducer,\n  categories: categoryReducer,\n});\n\nexport default rootReducers;\n","import { applyMiddleware, createStore } from \"redux\";\nimport { logger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport rootReducers from \"./root-reducer\";\n\nconst middlewares = [logger, thunkMiddleware];\nconst store = createStore(rootReducers, applyMiddleware(...middlewares));\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}